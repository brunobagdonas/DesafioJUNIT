Etapa de Teste 1

public class JulgamentoPrisioneiro {
   private int PENA_INOCENCIA = 10;
   private int PENA_CONDENACAO_MUTUA = 15;
   private int PENA_CONDENACAO_INDIVIDUAL = 10;
   private int PENA_CONDENACAO_CUMPLICES = 11;

   public int calculaPena(Resposta respostaPrisioneiroA, Resposta respostaPrisioneiroB) {
      if (respostaPrisioneiroA == Resposta.DELACAO) {
          if (respostaPrisioneiroB == Resposta.DELACAO) {
            return PENA_CONDENACAO_MUTUA;
          } else {
                 return PENA_INOCENCIA;
                 }
       } else {
                if (respostaPrisioneiroB == Resposta.DELACAO) {
                    return PENA_CONDENACAO_INDIVIDUAL;
                } else {
                         return PENA_CONDENACAO_CUMPLICES;
                        }
                }
     }
}

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;

class JulgamentoPrisioneiroTest {

	@Test
	void test() {
		fail("Not yet implemented");
	}

}

Observação (Resposta 3): Erro na classe Principal (JulgamentoPrisioneiro.java) pela falta de implementação do enum Resposta. 

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Etapa de Teste 2

public class JulgamentoPrisioneiro {
	private int PENA_INOCENCIA = 10;
	private int PENA_CONDENACAO_MUTUA = 15;
	private int PENA_CONDENACAO_INDIVIDUAL = 10;
	private int PENA_CONDENACAO_CUMPLICES = 11;
	
	public enum Resposta {
		DELACAO, NEGACAO //Criado negação pois não cairá no else se apenas tiver delacao
	}

	public int calculaPena(Resposta respostaPrisioneiroA, Resposta respostaPrisioneiroB) {
		if (respostaPrisioneiroA == Resposta.DELACAO) {
			if (respostaPrisioneiroB == Resposta.DELACAO) {
				return PENA_CONDENACAO_MUTUA;
			} else {
				return PENA_INOCENCIA;
			}
		} else {
			if (respostaPrisioneiroB == Resposta.DELACAO) {
				return PENA_CONDENACAO_INDIVIDUAL;
			} else {
				return PENA_CONDENACAO_CUMPLICES;
			}
		}
	}
}



import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;

class JulgamentoPrisioneiroTest {

	@Test
	void testJulgamento() {
		fail("Not yet implemented");
	}

}


Observações: Correção do erro de implementação com a adição de enum Resposta.
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Etapa de Teste 3

JulgamentoPrisioneiro.java


public class JulgamentoPrisioneiro {
   private int PENA_INOCENCIA = 10;
   private int PENA_CONDENACAO_MUTUA = 15;
   private int PENA_CONDENACAO_INDIVIDUAL = 10;
   private int PENA_CONDENACAO_CUMPLICES = 11;

   public enum Resposta{
	   NEGACAO, DELACAO
   }
   
   public int calculaPena(Resposta respostaPrisioneiroA, Resposta respostaPrisioneiroB) {
      if (respostaPrisioneiroA == Resposta.DELACAO) {
          if (respostaPrisioneiroB == Resposta.DELACAO) {
            return PENA_CONDENACAO_MUTUA;
          } else {
                 return PENA_INOCENCIA;
                 }
       } else {
                if (respostaPrisioneiroB == Resposta.DELACAO) {
                    return PENA_CONDENACAO_INDIVIDUAL;
                } else {
                         return PENA_CONDENACAO_CUMPLICES;
                        }
                }
     }
}



Resposta.java

public enum Resposta {
	NEGACAO, DELACAO
}


JulgamentoPrisioneiroTest.java


import static org.junit.Assert.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertEquals;

import org.junit.jupiter.api.Test;

import JulgamentoPrisioneiro.Resposta;

class JulgamentoPrisioneiroTest {

	@Test
	void testJulgamento() {
		Resposta respSuspeitoA = Resposta.DELACAO;
		Resposta respSuspeitoB = Resposta.DELACAO;
		
		JulgamentoPrisioneiro jp = new JulgamentoPrisioneiro();
		assertNotNull(jp);
		
		int penaSuspeitoA = jp.calculaPena(respSuspeitoA, respSuspeitoB);
		int penaSuspeitoB = jp.calculaPena(respSuspeitoB, respSuspeitoA);
		
		assertEquals(5, penaSuspeitoA);
		assertEquals(5, penaSuspeitoB);
		
	}

}

Observações: Adição da classe Resposta.java contendo o enum público para utilização na classe de implementação e de teste.
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Etapa de Teste 4

JulgamentoPrisioneiro.java


public class JulgamentoPrisioneiro {
   private int PENA_INOCENCIA = 10;
   private int PENA_CONDENACAO_MUTUA = 5;
   private int PENA_CONDENACAO_INDIVIDUAL = 10;
   private int PENA_CONDENACAO_CUMPLICES = 11;

   public int calculaPena(Resposta respostaPrisioneiroA, Resposta respostaPrisioneiroB) {
      if (respostaPrisioneiroA == Resposta.DELACAO) {
          if (respostaPrisioneiroB == Resposta.DELACAO) {
            return PENA_CONDENACAO_MUTUA;
          } else {
                 return PENA_INOCENCIA;
                 }
       } else {
                if (respostaPrisioneiroB == Resposta.DELACAO) {
                    return PENA_CONDENACAO_INDIVIDUAL;
                } else {
                         return PENA_CONDENACAO_CUMPLICES;
                        }
                }
     }
}


Resposta.java

public enum Resposta {
	NEGACAO, DELACAO
}


JulgamentoPrisioneiroTest.java


import static org.junit.Assert.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertEquals;

import org.junit.jupiter.api.Test;


class JulgamentoPrisioneiroTest {

	@Test
	public void testJulgamento() {
		Resposta respSuspeitoA = Resposta.DELACAO;
		Resposta respSuspeitoB = Resposta.DELACAO;
		
		JulgamentoPrisioneiro jp = new JulgamentoPrisioneiro();
		assertNotNull(jp);
		
		int penaSuspeitoA = jp.calculaPena(respSuspeitoA, respSuspeitoB);
		int penaSuspeitoB = jp.calculaPena(respSuspeitoB, respSuspeitoA);
		
		assertEquals(5, penaSuspeitoA);
		assertEquals(5, penaSuspeitoB);
		
	}

}


Observações: Remoção do enum Resposta na classe de implementação (JulgamentoPrisioneiro.java) para utilização do correspondente que consta na classe (Resposta.java) e alteração do INT PENA_CONDENACAO_MUTUA de 15 para o erro de teste sumir
(penaSuspeitoA==5 && penaSuspeitoB==5) = Acerto
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
